You are an engineer proficient in {UItype}. 

# Task Description

Your task is to write a {UItype} code for a mobile app that meets my requirements.

I will provide you with the following:
1. Function descriptions of each component and their types:
The component types will be given in a fixed format: 
Component Keyword: 
Component Function Description. 
@@@Component Type@@@

2.Page Transition Graph (PTG)
Formal Definition of PTG:
A Page Transition Graph is a directed graph G = (N, E), where:

N is the set of nodes representing the various screens (pages) in the App. Each node n ∈ N represents a specific screen and has the following attributes:
- id: A unique identifier for the node, typically a string or integer.
- name: The name of the screen, used for readability and code generation.
- type: The type of the screen, such as "login page," "list page," "detail page," etc., to guide code generation.
- props: Other attributes of the screen, such as element layout, style, etc., to describe the screen in detail.

E is the set of directed edges (Edge) representing the transition relationships between screens. Each edge e = (n1, n2, c) ∈ E represents a transition from screen n1 to screen n2 and has the following attributes:
- id: A unique identifier for the edge.
- from: The id of the starting node n1.
- to: The id of the target node n2.
- conditions: The condition c that triggers this transition, usually a boolean expression.
- actions: The actions that need to be performed during the transition, such as data transfer, state update, etc.

3. A complete mobile app UI screenshot.

# Component Types and Function Description
{component_type}

# Page Transition Graph (PTG)
{PTG}

# Complete App UI screenshot

# Requirements
1. Carefully analyze each UI design image, identifying all UI elements, layout structures, and interaction designs.
2. Generate corresponding React Native component code for each page, ensuring the visual effect is consistent with the design image.
3. Implement navigation logic between pages using the React Navigation library, assuming the code for other pages already exists.
4. Use React Native's built-in components and APIs wherever possible. Do not use any packages related to Expo. If you need to use the @expo/vector-icons package, please use the react-native-vector-icons package instead.
5. I only need the component code for this page, without including the App component or any navigation logic. The navigation has already been set up in App.js, so please do not include NavigationContainer or Stack.Navigator.
6. Follow React Native's best practices and performance optimization recommendations.
7. Provide a clear code structure and necessary comments.
8. Use `StyleSheet.create` to define styles, rather than `StyleSheet.com.create` or any other variants.
9. Please do not import any custom components.
10. Please generate the code using the following format:
```javascript
import React from 'react';
import {{ View, Text, StyleSheet }} from 'react-native';
import ...

const {node_id}Screen = () => {{
  return (
    <View style={{styles.container}}>
      // page content
    </View>
  );
}};

const styles = StyleSheet.create({{
  container: {{
    // Style
  }},
  // Other style
}});

export default {node_id}Screen;
```
11. Please use absolute positioning to ensure that the bottomNav is fixed at the bottom of the screen.
12. IMPORTANT: When generating the code, please strive to maintain the highest possible similarity with the layout and colors of the original UI design. This is the most important requirement you need to follow.

The information I am providing to you now is about the page with Node id {node_id}. This component should be defined as `const {node_id}Screen` and exported at the end of the file using `export default {node_id}Screen`. You must consider the transition logic between pages based on the PTG. When navigating to another page in the code, ensure that the page name matches the node ID in the PTG. I will provide you with the information about other pages one by one later.You should return to me a piece of {UItype} code that implements component type descriptions and the transition logic between pages based on the PTG.Please strictly adhere to the component types and PTG to write a standardized {UItype} code. And every image within should be represented by `../assets/snack-icon.png`.Imports an image using `require('../assets/snack-icon.png')` instead of `{{ uri: '../assets/snack-icon.png' }}`.Your response should only contain code, without any additional prompt information, and do not include any copyable code block markup in the output.
