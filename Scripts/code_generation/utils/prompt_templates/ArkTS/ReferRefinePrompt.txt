Task: Optimize the previously generated ArkTS code

Context:
In our previous conversation, you generated a piece of ArkTS code. Now, we have additional information from the ArkTS knowledge graph to further optimize this code.

Supplementary Information:
The supplementary information includes additional component descriptions, relevant code examples, interface definitions, component properties, and event descriptions.
{refer_info}

Optimization Requirements:
Based on the supplementary information above, please optimize the ArkTS code you previously generated by:
1. Ensuring the code adheres to ArkTS best practices
2. Incorporating useful parts from the relevant code examples where appropriate

When handling this prompt, please consider the following paragraph as the highest priority information:

1. Pay attention to the characteristics of declarative UI in {UItype}:
- Use the build() method to describe UI components
- Use decorators like @State, @Link, @Prop for state management
- Utilize {UItype}-specific components like Column, Row, Stack, etc.
- Implement proper layouts using flexbox principles
- Use proper event handling with methods like onClick()
- Implement navigation between pages using the router module
- Utilize {UItype}-specific APIs for features like camera access

2. Please reflect appropriate instant effects in the code based on the function descriptions of each component. Ensure the code follows {UItype} best practices and HarmonyOS design guidelines.

3. Object literals cannot be used as type declarations.Here is an example code demonstrating how to use interfaces, state management, list rendering, and custom components to build.
Incorrect Usage (Prohibited):
```typescript
//Incorrect case1
export struct GenericComponent {{
  @State dataArray:  Array<{{prop1:string,prop2:string,prop3:number,prop4:Resource}}> = [
    {{
      prop1: 'Example 1',
      prop2: 'Category 1',
      prop3: 75,
      prop4: $r('app.media.example')
    }},
    {{
      prop1: 'Example 2',
      prop2: 'Category 2',
      prop3: 30,
      prop4: $r('app.media.example')
    }}
  ];
...
//Incorrect case2
export struct GenericComponent {{
  @State dataArray: {{prop1:string,prop2:string,prop3:number,prop4:Resource}} = [
```
Correct Usage (Mandatory):
```typescript
import router from '@ohos.router';

interface InterfaceExample {{
  prop1: string;
  prop2: string;
  prop3: number;
  prop4: Resource;
}}

@Component
export struct GenericComponent {{
  @State dataArray: InterfaceExample[] = [
    {{
      prop1: 'Example 1',
      prop2: 'Category 1',
      prop3: 75,
      prop4: $r('app.media.example')
    }},
    {{
      prop1: 'Example 2',
      prop2: 'Category 2',
      prop3: 30,
      prop4: $r('app.media.example')
    }}
  ];

  build() {{
    Column() {{
      Text('Generic Example').fontSize(20).fontWeight(FontWeight.Bold)
      
      List() {{
        ForEach(this.dataArray, (item: InterfaceExample) => {{
          ListItem() {{
            this.GenericItem(item)
          }}
        }}, item => item.prop1)
      }}
    }}.width('100%').padding(16)
  }}

  @Builder
  private GenericItem(item: InterfaceExample) {{
    Row() {{
      Image(item.prop4).width(60).height(60).margin({{ right: 12 }})
      Column() {{
        Text(item.prop1).fontSize(16)
        Text(item.prop2).fontSize(14).fontColor(Color.Gray)
        Progress({{ value: item.prop3, total: 100 }}).width('100%').height(4)
      }}.layoutWeight(1)
    }}.width('100%').padding(8).backgroundColor(Color.White)
  }}
}}
```
Always use the correct syntax when generating code and thoroughly review it afterward to ensure this mistake is not made. If this error occurs, it will be considered a serious oversight.

4. Use explicit types instead of "any", "unknown" .
Incorrect Usage (Prohibited):
```typescript
//example1
ForEach(task.tags, (param) => {{
//example2
ForEach(this.featured, (param1: param1_type) => {{
          ListItem() {{
            this.FeaturedItem(param1)
          }}
        }}, param2 => param2.title)
```
Correct Usage (Mandatory):
```typescript
//example1
ForEach(task.tags, (param: param_type) => {{
//example2
ForEach(this.featured, (param1: param1_type) => {{
          ListItem() {{
            this.FeaturedItem(param1)
          }}
        }}, (param2: param2_type) => param2.title)
```

This is because explicitly specifying parameter types in TypeScript enhances code readability and type safety. Always use the correct syntax when generating code and thoroughly review it afterward to ensure this mistake is not made. If this error occurs, it will be considered a serious oversight.

5. Remember to import the correct packages at the beginning of your code.We do not have any pre-set components, so please __refrain from importing any custom components__.

6. Property 'prop' has no initializer and is not definitely assigned in the constructor. 
struct Prop {{
  //Prohibited
  prop: string    
  //Recommended
  prop?: string
  build() {{

7. Please make sure that every page has one and only one '@Entry' decorator.

8. This project will run on a phone with a resolution of 1080*2340, so please use layout properties such as width, height, margin, position, top, left, right, and bottom with caution.

You must consider the transition logic between pages based on the PTG. When navigating to another page in the code, ensure that the page name matches the node ID in the PTG. I will provide you with the information about othe-r pages one by one later. You should return {UItype} code that implements the component position coordinates and component type descriptions. Please strictly adhere to the component types and their placement within the app to write standardized {UItype} code. The images should be represented by `$r('app.media.template')`. Perform page navigation using the `router.pushUrl({{url:'page'}})` method. Main_pages is {page_list}. The page should be one of the main_pages and do not use any other pages. The page with Node id {node_id} should contain navigation to these pages {navigation_list}, and do not omit any page.

Output Format:
Provide only the complete optimized code without any additional explanations or comments.Remember to import the correct packages at the beginning of your code.


If you need to review the previously generated code, please let me know, and I will provide it for you.
