import router from '@ohos.router';

@Entry
@Component
struct DefaultViewPage {
  @State theme: string = 'light';
  @State currentValue: string = '1080';
  @State operation: string = '45 x 24';

  build() {
    Column() {
      Row() {
        Toggle({ type: ToggleType.Switch, isOn: this.theme === 'dark' })
          .selectedColor(this.theme === 'dark' ? '#007DFF' : '#E3E3E3')
          .switchPointColor('#FFFFFF')
          .onChange((isOn: boolean) => {
            this.theme = isOn ? 'dark' : 'light';
          })
        Text('Switch to Dark')
          .fontSize(14)
          .fontColor(this.theme === 'dark' ? Color.White : Color.Black)
      }
      .width('100%')
      .justifyContent(FlexAlign.SpaceBetween)
      .padding({ left: 16, right: 16, top: 8, bottom: 8 })

      Text(this.operation)
        .fontSize(12)
        .fontColor(Color.Gray)
        .alignSelf(ItemAlign.End)
        .margin({ right: 16 })

      Text(this.currentValue)
        .fontSize(48)
        .fontWeight(FontWeight.Bold)
        .fontColor(this.theme === 'dark' ? Color.White : Color.Black)
        .width('100%')
        .textAlign(TextAlign.End)
        .margin({ right: 16 })

      Row() {
        Image($r('app.media.template')).width(24).height(24)
        Text(this.currentValue).fontSize(16).fontColor(Color.Gray)
        Image($r('app.media.template')).width(24).height(24)
        Image($r('app.media.template')).width(24).height(24)
      }
      .width('100%')
      .justifyContent(FlexAlign.SpaceBetween)
      .padding({ left: 16, right: 16 })

      Grid() {
        GridItem() {
          Button('C').fontSize(20).backgroundColor(Color.Gray).fontColor(Color.White)
        }
        GridItem() {
          Button('()').fontSize(20).backgroundColor(Color.Gray).fontColor(Color.White)
        }
        GridItem() {
          Button('%').fontSize(20).backgroundColor(Color.Gray).fontColor(Color.White)
        }
        GridItem() {
          Button('/').fontSize(20).backgroundColor('#4B0082').fontColor(Color.White)
        }
        GridItem() {
          Button('7').fontSize(20).backgroundColor(Color.White).fontColor(Color.Black)
        }
        GridItem() {
          Button('8').fontSize(20).backgroundColor(Color.White).fontColor(Color.Black)
        }
        GridItem() {
          Button('9').fontSize(20).backgroundColor(Color.White).fontColor(Color.Black)
        }
        GridItem() {
          Button('x').fontSize(20).backgroundColor('#4B0082').fontColor(Color.White)
        }
        GridItem() {
          Button('4').fontSize(20).backgroundColor(Color.White).fontColor(Color.Black)
        }
        GridItem() {
          Button('5').fontSize(20).backgroundColor(Color.White).fontColor(Color.Black)
        }
        GridItem() {
          Button('6').fontSize(20).backgroundColor(Color.White).fontColor(Color.Black)
        }
        GridItem() {
          Button('-').fontSize(20).backgroundColor('#4B0082').fontColor(Color.White)
        }
        GridItem() {
          Button('1').fontSize(20).backgroundColor(Color.White).fontColor(Color.Black)
        }
        GridItem() {
          Button('2').fontSize(20).backgroundColor(Color.White).fontColor(Color.Black)
        }
        GridItem() {
          Button('3').fontSize(20).backgroundColor(Color.White).fontColor(Color.Black)
        }
        GridItem() {
          Button('+').fontSize(20).backgroundColor('#4B0082').fontColor(Color.White)
        }
        GridItem() {
          Button('+/-').fontSize(20).backgroundColor(Color.White).fontColor(Color.Black)
        }
        GridItem() {
          Button('0').fontSize(20).backgroundColor(Color.White).fontColor(Color.Black)
        }
        GridItem() {
          Button('.').fontSize(20).backgroundColor(Color.White).fontColor(Color.Black)
        }
        GridItem() {
          Button('=').fontSize(20).backgroundColor('#FF1493').fontColor(Color.White)
        }
      }
      .columnsTemplate('1fr 1fr 1fr 1fr')
      .rowsTemplate('1fr 1fr 1fr 1fr 1fr')
      .width('100%')
      .height('60%')
      .margin({ top: 16 })
    }
    .width('100%')
    .height('100%')
    .backgroundColor(this.theme === 'dark' ? Color.Black : Color.White)
  }
}