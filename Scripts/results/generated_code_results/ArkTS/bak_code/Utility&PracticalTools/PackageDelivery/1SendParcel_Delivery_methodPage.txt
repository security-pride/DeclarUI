import router from '@ohos.router';

interface DeliveryMethod {
  icon: Resource;
  title: string;
  duration: string;
}

interface RecipientInfo {
  name: string;
  email: string;
  phoneNumber: string;
  address: string;
}

@Entry
@Component
struct SendParcelDeliveryMethodPage {
  @State deliveryMethods: DeliveryMethod[] = [
    { icon: $r('app.media.template'), title: 'From door to parcel center', duration: '1- 2 days' },
    { icon: $r('app.media.template'), title: 'From door to door', duration: '2- 3 days' }
  ];
  @State recipientInfo: RecipientInfo = { name: 'James May', email: 'james.m', phoneNumber: '', address: '' };

  build() {
    Column() {
      Row() {
        Text('9:41').fontSize(16).fontWeight(FontWeight.Regular)
      }
      .width('100%')
      .justifyContent(FlexAlign.Center)
      .padding({ top: 12, bottom: 12 })

      Text('Send parcel')
        .fontSize(24)
        .fontWeight(FontWeight.Bold)
        .margin({ top: 20, bottom: 20 })

      Text('Delivery method')
        .fontSize(18)
        .fontWeight(FontWeight.Medium)
        .alignSelf(ItemAlign.Start)
        .margin({ bottom: 10 })

      Column() {
        ForEach(this.deliveryMethods, (method: DeliveryMethod) => {
          Row() {
            Image(method.icon)
              .width(40)
              .height(40)
              .margin({ right: 16 })
            Column() {
              Text(method.title)
                .fontSize(16)
                .fontWeight(FontWeight.Medium)
              Text(method.duration)
                .fontSize(14)
                .fontColor(Color.Gray)
            }
          }
          .width('100%')
          .padding(16)
          .backgroundColor(Color.White)
          .borderRadius(8)
          .margin({ bottom: 10 })
        })
      }
      .width('100%')

      Text('Recipient info')
        .fontSize(18)
        .fontWeight(FontWeight.Medium)
        .alignSelf(ItemAlign.Start)
        .margin({ top: 20, bottom: 10 })

      Column() {
        TextInput({ placeholder: 'Name', text: this.recipientInfo.name })
          .width('100%')
          .height(48)
          .margin({ bottom: 10 })
        TextInput({ placeholder: 'Email', text: this.recipientInfo.email })
          .width('100%')
          .height(48)
          .margin({ bottom: 10 })
        TextInput({ placeholder: 'Phone number' })
          .width('100%')
          .height(48)
          .margin({ bottom: 10 })
        TextInput({ placeholder: 'Address' })
          .width('100%')
          .height(48)
          .margin({ bottom: 10 })
      }
      .width('100%')

      Button('Next')
        .width('100%')
        .height(48)
        .margin({ top: 20 })
        .onClick(() => {
          router.pushUrl({ url: 'pages/SendParcel_Parcel_sizePage' })
        })
    }
    .width('100%')
    .height('100%')
    .backgroundColor('#F5F5F5')
    .padding({ left: 16, right: 16 })

    Row() {
      Column() {
        Image($r('app.media.template')).width(24).height(24)
        Text('My parcels').fontSize(12).fontColor(Color.Gray)
      }.layoutWeight(1).onClick(() => {
        router.pushUrl({ url: 'pages/Home_Top_drawer_openPage' })
      })

      Column() {
        Image($r('app.media.template')).width(24).height(24)
        Text('Send parcel').fontSize(12).fontColor(Color.Black)
      }.layoutWeight(1)

      Column() {
        Image($r('app.media.template')).width(24).height(24)
        Text('Parcel center').fontSize(12).fontColor(Color.Gray)
      }.layoutWeight(1).onClick(() => {
        router.pushUrl({ url: 'pages/Parcel_centerPage' })
      })
    }
    .width('100%')
    .height('8%')
    .backgroundColor(Color.White)
    .position({ x: 0, y: '92%' })
  }

  onBackPress() {
    router.back()
    return true
  }
}