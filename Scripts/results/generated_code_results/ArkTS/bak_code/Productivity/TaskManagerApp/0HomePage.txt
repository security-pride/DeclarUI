import router from '@ohos.router';

interface TaskItem {
  title: string;
  progress: number;
}

interface UpcomingTask {
  title: string;
  date: string;
}

@Entry
@Component
struct HomePage {
  @State dailyProgress: number = 95;
  @State todayTasks: TaskItem[] = [
    { title: 'User experience design', progress: 40 },
    { title: 'Meeting with designer', progress: 60 }
  ];
  @State upcomingTasks: UpcomingTask[] = [
    { title: 'Website Design', date: '23 Feb 2022' }
  ];

  build() {
    Column() {
      Row() {
        Image($r('app.media.template'))
          .width(40)
          .height(40)
          .borderRadius(20)
        Column() {
          Text('Linda C. Ng')
            .fontSize(16)
            .fontWeight(FontWeight.Bold)
          Text('18 Feb 2022')
            .fontSize(12)
            .fontColor(Color.Gray)
        }
        .layoutWeight(1)
        .alignItems(HorizontalAlign.Start)
        .margin({ left: 10 })
        Image($r('app.media.template'))
          .width(24)
          .height(24)
      }
      .width('100%')
      .justifyContent(FlexAlign.SpaceBetween)
      .padding(16)

      Column() {
        Row() {
          Text('Your daily task almost done!')
            .fontSize(16)
            .fontColor(Color.White)
          Text('95%')
            .fontSize(20)
            .fontWeight(FontWeight.Bold)
            .fontColor(Color.White)
        }
        .justifyContent(FlexAlign.SpaceBetween)
        .width('100%')

        Progress({ value: this.dailyProgress, total: 100 })
          .color(Color.White)
          .height(4)
          .margin({ top: 10, bottom: 10 })

        Button('View Task')
          .backgroundColor(Color.White)
          .fontColor('#000000')
          .onClick(() => {
            router.pushUrl({ url: 'pages/AllTasksPage' })
          })
      }
      .width('100%')
      .padding(16)
      .borderRadius(16)
      .backgroundColor('#3366FF')

      Row() {
        Text("Today's Task")
          .fontSize(18)
          .fontWeight(FontWeight.Bold)
        Text('See All')
          .fontSize(14)
          .fontColor(Color.Blue)
          .onClick(() => {
            router.pushUrl({ url: 'pages/AllTasksPage' })
          })
      }
      .width('100%')
      .justifyContent(FlexAlign.SpaceBetween)
      .margin({ top: 20, bottom: 10 })

      Flex({ wrap: FlexWrap.Wrap, justifyContent: FlexAlign.SpaceBetween }) {
        ForEach(this.todayTasks, (task: TaskItem) => {
          Column() {
            Image($r('app.media.template'))
              .width(32)
              .height(32)
            Text(task.title)
              .fontSize(14)
              .margin({ top: 8, bottom: 8 })
            Progress({ value: task.progress, total: 100 })
              .width('100%')
              .height(4)
            Text(`${task.progress}%`)
              .fontSize(12)
              .margin({ top: 4 })
          }
          .width('48%')
          .padding(12)
          .borderRadius(12)
          .backgroundColor(Color.White)
          .margin({ bottom: 10 })
          .onClick(() => {
            router.pushUrl({ url: 'pages/TaskDetailsPage' })
          })
        })
      }

      Text('Upcoming Task')
        .fontSize(18)
        .fontWeight(FontWeight.Bold)
        .alignSelf(ItemAlign.Start)
        .margin({ top: 20, bottom: 10 })

      ForEach(this.upcomingTasks, (task: UpcomingTask) => {
        Row() {
          Image($r('app.media.template'))
            .width(32)
            .height(32)
          Column() {
            Text(task.title)
              .fontSize(14)
            Text(task.date)
              .fontSize(12)
              .fontColor(Color.Gray)
          }
          .alignItems(HorizontalAlign.Start)
          .margin({ left: 12 })
        }
        .width('100%')
        .padding(12)
        .borderRadius(12)
        .backgroundColor(Color.White)
        .margin({ bottom: 10 })
      })
    }
    .width('100%')
    .height('100%')
    .backgroundColor('#F5F5F5')
    .padding(16)

    Row() {
      Image($r('app.media.template'))
        .width(24)
        .height(24)
      Image($r('app.media.template'))
        .width(24)
        .height(24)
        .onClick(() => {
          router.pushUrl({ url: 'pages/CalendarPage' })
        })
      Button({ type: ButtonType.Circle, stateEffect: true }) {
        Image($r('app.media.template'))
          .width(24)
          .height(24)
      }
      .width(48)
      .height(48)
      .backgroundColor('#3366FF')
      .onClick(() => {
        router.pushUrl({ url: 'pages/AddTaskPage' })
      })
      Image($r('app.media.template'))
        .width(24)
        .height(24)
      Image($r('app.media.template'))
        .width(24)
        .height(24)
    }
    .width('100%')
    .justifyContent(FlexAlign.SpaceAround)
    .backgroundColor(Color.White)
    .padding({ top: 8, bottom: 8 })
    .position({ x: 0, y: '100%' })
    .translate({ y: -56 })
  }
}