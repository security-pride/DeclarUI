import router from '@ohos.router';

interface Task {
  title: string;
  status: string;
  time: string;
  participants: number;
  progress: number;
}

@Entry
@Component
struct AllTasksPage {
  @State tasks: Task[] = [
    { title: 'Meeting with designer', status: 'Running', time: '09AM-10AM', participants: 4, progress: 60 },
    { title: 'Grocery app design', status: 'Ongoing', time: '10AM-11AM', participants: 5, progress: 95 },
    { title: 'Dashboard redesign', status: 'Running', time: '02PM-03PM', participants: 3, progress: 50 }
  ];

  build() {
    Column() {
      Row() {
        Button() {
          Image($r('app.media.template')).width(24).height(24)
        }
        .width(48).height(48).backgroundColor(Color.White)
        .onClick(() => {
          router.back()
        })

        Text('All tasks').fontSize(20).fontWeight(FontWeight.Bold)

        Blank()

        Button() {
          Image($r('app.media.template')).width(24).height(24)
        }
        .width(48).height(48).backgroundColor(Color.White)
      }
      .width('100%').padding({ left: 16, right: 16, top: 8, bottom: 8 })

      Scroll() {
        Column() {
          Text('Todays task').fontSize(18).fontWeight(FontWeight.Medium).alignSelf(ItemAlign.Start)
            .margin({ top: 16, bottom: 8 })

          ForEach(this.tasks, (task: Task) => {
            this.TaskItem(task)
          })
        }
        .width('100%').padding({ left: 16, right: 16 })
      }
      .layoutWeight(1)
    }
    .width('100%').height('100%').backgroundColor('#F1F3F5')
  }

  @Builder
  TaskItem(task: Task) {
    Column() {
      Row() {
        Column() {
          Text(task.title).fontSize(16).fontWeight(FontWeight.Medium)
          Row() {
            Text(task.time).fontSize(14).fontColor(Color.Gray)
            Blank()
            Image($r('app.media.template')).width(16).height(16)
            Text(`${task.participants} Persons`).fontSize(14).fontColor(Color.Gray)
          }.width('100%').margin({ top: 4 })
        }.alignItems(HorizontalAlign.Start).layoutWeight(1)

        Text(task.status)
          .fontSize(14)
          .fontColor(task.status === 'Running' ? '#5E9EFF' : '#8D61FF')
          .backgroundColor(task.status === 'Running' ? '#EDF3FF' : '#F3EDFF')
          .padding({ left: 8, right: 8, top: 4, bottom: 4 })
          .borderRadius(4)
      }.width('100%').justifyContent(FlexAlign.SpaceBetween)

      Row() {
        Progress({ value: task.progress, total: 100 })
          .color(task.status === 'Running' ? '#5E9EFF' : '#8D61FF')
          .height(4)
          .width('100%')
      }.margin({ top: 8 })

      Row() {
        Text('Progress').fontSize(14).fontColor(Color.Gray)
        Blank()
        Text(`${task.progress}%`).fontSize(14).fontColor(Color.Gray)
      }.width('100%').margin({ top: 4 })
    }
    .width('100%')
    .padding(16)
    .backgroundColor(Color.White)
    .borderRadius(8)
    .margin({ bottom: 16 })
    .onClick(() => {
      router.pushUrl({ url: 'pages/TaskDetailsPage' })
    })
  }
}