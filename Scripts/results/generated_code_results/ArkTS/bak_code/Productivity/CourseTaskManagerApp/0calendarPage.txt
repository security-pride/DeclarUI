import router from '@ohos.router';

interface Task {
  time: string;
  subject: string;
  chapter: string;
  instructor: string;
  platform: string;
}

@Entry
@Component
struct CalendarPage {
  @State selectedDate: string = '17';
  @State tasks: Task[] = [
    {
      time: '9:30',
      subject: 'Physics',
      chapter: 'Chapter 3: Force',
      instructor: 'Alex Jesus',
      platform: 'Google Meet'
    },
    {
      time: '11:00',
      subject: 'Geography',
      chapter: 'Chapter 12: Soil Profile',
      instructor: 'Jennifer Clark',
      platform: 'Zoom'
    },
    {
      time: '12:20',
      subject: 'Assignment',
      chapter: 'World Regional Pattern',
      instructor: 'Alexia Tenorio',
      platform: 'Google Docs'
    }
  ];

  build() {
    Column() {
      Row() {
        Column() {
          Text('17 September')
            .fontSize(16)
            .fontWeight(FontWeight.Bold)
          Text('Today')
            .fontSize(24)
            .fontWeight(FontWeight.Bold)
        }
        .alignItems(HorizontalAlign.Start)

        Button('Add Task')
          .backgroundColor('#4CAF50')
          .fontColor(Color.White)
          .onClick(() => {
            router.pushUrl({ url: 'pages/AddTaskPage' })
          })
      }
      .width('100%')
      .justifyContent(FlexAlign.SpaceBetween)
      .padding({ top: 20, bottom: 10, left: 16, right: 16 })

      Row() {
        ForEach(['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'], (day, index) => {
          Column() {
            Text(day)
              .fontSize(14)
              .fontColor(Color.Gray)
            Text((14 + index).toString())
              .fontSize(16)
              .fontWeight(day === 'Thu' ? FontWeight.Bold : FontWeight.Normal)
              .fontColor(day === 'Thu' ? Color.Blue : Color.Black)
          }
          .width('14%')
          .alignItems(HorizontalAlign.Center)
        })
      }
      .width('100%')
      .padding({ left: 16, right: 16, top: 10, bottom: 20 })

      List() {
        ForEach(this.tasks, (task: Task) => {
          ListItem() {
            this.TaskItem(task)
          }
        })
      }
      .width('100%')
      .layoutWeight(1)

      Row() {
        Column() {
          Image($r('app.media.template'))
            .width(24)
            .height(24)
          Text('Home')
            .fontSize(12)
            .fontColor(Color.Gray)
        }
        .onClick(() => {
          router.pushUrl({ url: 'pages/HomePage' })
        })

        Column() {
          Image($r('app.media.template'))
            .width(24)
            .height(24)
          Text('Tasks')
            .fontSize(12)
            .fontColor(Color.Blue)
        }

        Column() {
          Image($r('app.media.template'))
            .width(24)
            .height(24)
          Text('Classroom')
            .fontSize(12)
            .fontColor(Color.Gray)
        }

        Column() {
          Image($r('app.media.template'))
            .width(24)
            .height(24)
          Text('Chat')
            .fontSize(12)
            .fontColor(Color.Gray)
        }
      }
      .width('100%')
      .justifyContent(FlexAlign.SpaceAround)
      .padding({ top: 10, bottom: 10 })
      .backgroundColor(Color.White)
    }
    .width('100%')
    .height('100%')
    .backgroundColor('#F5F5F5')
  }

  @Builder
  TaskItem(task: Task) {
    Row() {
      Text(task.time)
        .fontSize(14)
        .fontColor(Color.Gray)
        .width('15%')

      Column() {
        Text(task.subject)
          .fontSize(16)
          .fontWeight(FontWeight.Bold)
        Text(task.chapter)
          .fontSize(14)
          .fontColor(Color.Gray)
        Row() {
          Image($r('app.media.template'))
            .width(20)
            .height(20)
          Text(task.instructor)
            .fontSize(14)
            .fontColor(Color.Gray)
            .margin({ left: 5 })
        }
        Row() {
          Image($r('app.media.template'))
            .width(20)
            .height(20)
          Text(task.platform)
            .fontSize(14)
            .fontColor(Color.Gray)
            .margin({ left: 5 })
        }
      }
      .alignItems(HorizontalAlign.Start)
      .layoutWeight(1)
    }
    .width('100%')
    .padding(10)
    .backgroundColor(Color.White)
    .borderRadius(8)
    .margin({ bottom: 10 })
  }
}