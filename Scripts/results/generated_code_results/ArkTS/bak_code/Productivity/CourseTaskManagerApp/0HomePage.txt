import router from '@ohos.router';

interface Course {
  name: string;
  color: string;
}

interface ScheduleItem {
  subject: string;
  chapter: string;
  time: string;
  instructor: string;
  platform: string;
}

@Entry
@Component
struct HomePage {
  @State greeting: string = 'Hello Liana';
  @State taskCount: number = 4;
  @State courses: Course[] = [
    { name: 'Mathematics', color: '#FF69B4' },
    { name: 'Chemistry', color: '#FFA500' }
  ];
  @State schedule: ScheduleItem[] = [
    {
      subject: 'Physics',
      chapter: 'Chapter 3: Force',
      time: '09:30',
      instructor: 'Alex Jesus',
      platform: 'Google Meet'
    }
  ];

  build() {
    Column() {
      Row() {
        Text(this.greeting)
          .fontSize(20)
          .fontWeight(FontWeight.Bold)
        Blank()
        Image($r('app.media.template'))
          .width(40)
          .height(40)
          .borderRadius(20)
          .margin({ left: 10 })
      }
      .width('100%')
      .padding(10)

      Text(`You've got ${this.taskCount} tasks today`)
        .fontSize(16)
        .margin({ top: 10, bottom: 20 })

      Text('Courses')
        .fontSize(18)
        .fontWeight(FontWeight.Bold)
        .alignSelf(ItemAlign.Start)
        .margin({ bottom: 10 })

      Row() {
        ForEach(this.courses, (course: Course) => {
          Column() {
            Text(course.name)
              .fontSize(16)
              .fontColor(Color.White)
          }
          .width(120)
          .height(120)
          .backgroundColor(course.color)
          .borderRadius(10)
          .justifyContent(FlexAlign.Center)
          .margin({ right: 10 })
        })
      }
      .width('100%')
      .height(140)
      .margin({ bottom: 20 })

      Text('Your schedule')
        .fontSize(18)
        .fontWeight(FontWeight.Bold)
        .alignSelf(ItemAlign.Start)
        .margin({ bottom: 10 })

      ForEach(this.schedule, (item: ScheduleItem) => {
        Column() {
          Row() {
            Column() {
              Text(item.subject)
                .fontSize(18)
                .fontWeight(FontWeight.Bold)
              Text(item.chapter)
                .fontSize(14)
                .fontColor(Color.Gray)
            }
            .alignItems(HorizontalAlign.Start)

            Blank()

            Column() {
              Text(item.time)
                .fontSize(16)
              Text(item.instructor)
                .fontSize(14)
                .fontColor(Color.Gray)
              Text(item.platform)
                .fontSize(14)
                .fontColor(Color.Gray)
            }
            .alignItems(HorizontalAlign.End)
          }
          .width('100%')
          .padding(10)
          .backgroundColor('#E6E6FA')
          .borderRadius(10)
        }
        .onClick(() => {
          router.pushUrl({ url: 'pages/ClassroomPage' })
        })
      })
    }
    .width('100%')
    .height('100%')
    .backgroundColor('#F8F8FF')
    .padding(16)

    Row() {
      Column() {
        Image($r('app.media.template')).width(24).height(24)
        Text('Home').fontSize(12)
      }.onClick(() => {
        // Already on home page
      })

      Column() {
        Image($r('app.media.template')).width(24).height(24)
        Text('Tasks').fontSize(12)
      }.onClick(() => {
        router.pushUrl({ url: 'pages/CalendarPage' })
      })

      Column() {
        Image($r('app.media.template')).width(24).height(24)
        Text('Classroom').fontSize(12)
      }.onClick(() => {
        router.pushUrl({ url: 'pages/ClassroomPage' })
      })

      Column() {
        Image($r('app.media.template')).width(24).height(24)
        Text('Discuss').fontSize(12)
      }.onClick(() => {
        router.pushUrl({ url: 'pages/DiscussionPage' })
      })
    }
    .width('100%')
    .justifyContent(FlexAlign.SpaceAround)
    .position({ x: 0, y: '92%' })
    .backgroundColor(Color.White)
    .padding({ top: 5, bottom: 5 })
  }
}