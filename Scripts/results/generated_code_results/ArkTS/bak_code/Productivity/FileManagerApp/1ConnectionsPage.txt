import router from '@ohos.router';

interface ConnectionItem {
  icon: Resource;
  text: string;
}

@Entry
@Component
struct ConnectionsPage {
  @State computerItems: ConnectionItem[] = [
    { icon: $r('app.media.template'), text: 'Connect computer via address bar' }
  ];
  @State cloudItems: ConnectionItem[] = [
    { icon: $r('app.media.template'), text: 'Dropbox' },
    { icon: $r('app.media.template'), text: 'Google Drive' }
  ];
  @State addConnectionItems: ConnectionItem[] = [
    { icon: $r('app.media.template'), text: 'Box' },
    { icon: $r('app.media.template'), text: 'OneDrive' },
    { icon: $r('app.media.template'), text: 'FTP Server' },
    { icon: $r('app.media.template'), text: 'SFTP Server' },
    { icon: $r('app.media.template'), text: 'Windows SMB' }
  ];

  build() {
    Column() {
      Row() {
        Image($r('app.media.template')).width(24).height(24)
        Text('Connections')
          .fontSize(20)
          .fontWeight(FontWeight.Bold)
          .margin({ left: 16 })
      }.width('100%').padding(16).justifyContent(FlexAlign.Start)

      List() {
        ListItem() {
          this.SectionBuilder('From Computer', this.computerItems)
        }

        ListItem() {
          this.SectionBuilder('Import from cloud storage', this.cloudItems)
        }

        ListItem() {
          this.SectionBuilder('Add Connection', this.addConnectionItems)
        }
      }.width('100%').layoutWeight(1)

      Row() {
        Image($r('app.media.template')).width(24).height(24).onClick(() => router.pushUrl({ url: 'pages/HomeGridPage' }))
        Image($r('app.media.template')).width(24).height(24)
        Image($r('app.media.template')).width(24).height(24)
        Image($r('app.media.template')).width(24).height(24)
        Image($r('app.media.template')).width(24).height(24).onClick(() => router.pushUrl({ url: 'pages/RecentsPage' }))
      }.width('100%').justifyContent(FlexAlign.SpaceAround).padding(16)
    }.width('100%').height('100%')
  }

  @Builder
  SectionBuilder(title: string, items: ConnectionItem[]) {
    Column() {
      Text(title)
        .fontSize(16)
        .fontWeight(FontWeight.Bold)
        .margin({ top: 16, bottom: 8 })

      ForEach(items, (item: ConnectionItem) => {
        Row() {
          Image(item.icon).width(24).height(24)
          Text(item.text)
            .fontSize(14)
            .margin({ left: 16 })
          Blank()
          if (item.text !== 'Dropbox' && item.text !== 'Google Drive') {
            Image($r('app.media.template')).width(24).height(24)
          }
        }
        .width('100%')
        .padding(16)
        .backgroundColor(item.text === 'Google Drive' ? '#E8F5E9' : Color.White)
        .borderRadius(8)
        .margin({ bottom: 8 })
        .onClick(() => {
          if (item.text === 'Connect computer via address bar') {
            router.pushUrl({ url: 'pages/ConnectToComputerPage' })
          }
        })
      })
    }.width('100%').padding({ left: 16, right: 16 })
  }

  aboutToAppear() {
    // Set status bar
    let statusHeight = { height: 24, width: '100%' }
    Column() {
      Text('9:41')
        .fontSize(12)
        .width('100%')
        .textAlign(TextAlign.Center)
      Row() {
        Image($r('app.media.template')).width(16).height(16)
        Image($r('app.media.template')).width(16).height(16)
        Image($r('app.media.template')).width(16).height(16)
      }.width('100%').justifyContent(FlexAlign.End)
    }
    .width('100%')
    .height(statusHeight.height)
    .backgroundColor('#F1F3F5')
  }
}