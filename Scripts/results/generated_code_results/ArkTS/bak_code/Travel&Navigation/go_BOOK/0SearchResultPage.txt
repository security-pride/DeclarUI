import router from '@ohos.router';

interface FlightInfo {
  airline: string;
  departureTime: string;
  arrivalTime: string;
  departureCode: string;
  arrivalCode: string;
  duration: string;
  price: number;
}

@Entry
@Component
struct SearchResultPage {
  @State searchInfo: { from: string, to: string, date: string, seats: number, class: string } = {
    from: 'France',
    to: 'Switzerland',
    date: 'Friday, 30 Jul',
    seats: 2,
    class: 'Business'
  };

  @State flightResults: FlightInfo[] = [
    {
      airline: 'AirArabia',
      departureTime: '11:00',
      arrivalTime: '16:30',
      departureCode: 'LHR',
      arrivalCode: 'BHD',
      duration: '05h 30m',
      price: 330
    },
    {
      airline: 'ZAYAAN',
      departureTime: '11:00',
      arrivalTime: '16:30',
      departureCode: 'LHR',
      arrivalCode: 'BHD',
      duration: '05h 30m',
      price: 330
    },
    {
      airline: 'Biman Bangladesh Airlines',
      departureTime: '11:00',
      arrivalTime: '16:30',
      departureCode: 'LHR',
      arrivalCode: 'BHD',
      duration: '05h 30m',
      price: 330
    },
    {
      airline: 'NovoAir',
      departureTime: '11:00',
      arrivalTime: '16:30',
      departureCode: 'LHR',
      arrivalCode: 'BHD',
      duration: '05h 30m',
      price: 330
    }
  ];

  build() {
    Column() {
      Row() {
        Image($r('app.media.template'))
          .width(24)
          .height(24)
          .margin({ right: 16 })
          .onClick(() => {
            router.back()
          })
        Text('Search')
          .fontSize(20)
          .fontWeight(FontWeight.Bold)
        Blank()
        Image($r('app.media.template'))
          .width(24)
          .height(24)
      }
      .width('100%')
      .padding(16)

      Row() {
        Text(`${this.searchInfo.from} • ${this.searchInfo.to}`)
          .fontSize(16)
          .fontWeight(FontWeight.Medium)
        Blank()
        Image($r('app.media.template'))
          .width(20)
          .height(20)
      }
      .width('100%')
      .padding({ left: 16, right: 16, top: 8, bottom: 8 })

      Text(`${this.searchInfo.date} • ${this.searchInfo.seats} Seat • ${this.searchInfo.class}`)
        .fontSize(14)
        .fontColor(Color.Gray)
        .width('100%')
        .padding({ left: 16, right: 16, bottom: 16 })

      Text('Search Result')
        .fontSize(16)
        .fontWeight(FontWeight.Medium)
        .width('100%')
        .padding({ left: 16, right: 16, bottom: 8 })

      List() {
        ForEach(this.flightResults, (flight: FlightInfo) => {
          ListItem() {
            this.FlightCard(flight)
          }
        }, (flight: FlightInfo) => flight.airline)
      }
      .width('100%')
      .layoutWeight(1)
    }
    .width('100%')
    .height('100%')
    .backgroundColor('#F1F3F5')
  }

  @Builder
  FlightCard(flight: FlightInfo) {
    Column() {
      Row() {
        Text(flight.airline)
          .fontSize(16)
          .fontWeight(FontWeight.Medium)
      }
      .width('100%')
      .padding({ top: 16, bottom: 8 })

      Row() {
        Column() {
          Text(flight.departureTime)
            .fontSize(18)
            .fontWeight(FontWeight.Bold)
          Text(flight.departureCode)
            .fontSize(14)
            .fontColor(Color.Gray)
        }

        Column() {
          Image($r('app.media.template'))
            .width(100)
            .height(24)
          Text(flight.duration)
            .fontSize(12)
            .fontColor(Color.Gray)
        }
        .layoutWeight(1)
        .alignItems(HorizontalAlign.Center)

        Column() {
          Text(flight.arrivalTime)
            .fontSize(18)
            .fontWeight(FontWeight.Bold)
          Text(flight.arrivalCode)
            .fontSize(14)
            .fontColor(Color.Gray)
        }
      }
      .width('100%')
      .padding({ bottom: 16 })

      Row() {
        Text(`$${flight.price}`)
          .fontSize(18)
          .fontWeight(FontWeight.Bold)
        Blank()
        Button('Book Now')
          .fontSize(14)
          .fontColor(Color.White)
          .backgroundColor('#007DFF')
          .height(36)
          .width(100)
          .onClick(() => {
            // Implement booking logic here
          })
      }
      .width('100%')
      .padding({ top: 8, bottom: 16 })
    }
    .width('100%')
    .padding({ left: 16, right: 16 })
    .backgroundColor(Color.White)
    .borderRadius(8)
    .margin({ bottom: 16 })
  }
}