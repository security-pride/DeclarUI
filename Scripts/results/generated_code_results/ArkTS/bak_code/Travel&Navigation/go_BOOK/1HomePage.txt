import router from '@ohos.router';

interface TravelInfo {
  from: string;
  to: string;
  journeyDate: string;
  journeyTime: string;
  travelers: number;
  travelClass: string;
}

@Entry
@Component
struct HomePage {
  @State currentTab: number = 0;
  @State tripType: string = 'One Way';
  @State travelInfo: TravelInfo = {
    from: 'France',
    to: 'Switzerland',
    journeyDate: '30 Jul 23',
    journeyTime: '18:25',
    travelers: 2,
    travelClass: 'Economy'
  };

  build() {
    Column() {
      Row() {
        Image($r('app.media.template')).width(40).height(40).margin({ right: 10 })
        Column() {
          Text('Mosarraf H.').fontSize(16).fontWeight(FontWeight.Bold)
          Text('London, UK').fontSize(14).fontColor(Color.Gray)
        }
        Blank()
        Button('London, UK', { type: ButtonType.Capsule })
          .height(30)
          .backgroundColor('#f0f0f0')
          .fontColor(Color.Black)
      }.width('100%').padding(16)

      Text('Welcome to GoBook').fontSize(24).fontWeight(FontWeight.Bold).margin({ top: 20, bottom: 10 })
      Text('Largest Online Ticket Destination').fontSize(16).fontColor(Color.Gray).margin({ bottom: 20 })

      Tabs() {
        TabContent() {
          this.BookingContent()
        }.tabBar('Flight')
        TabContent() {
          // Bus content
        }.tabBar('Bus')
        TabContent() {
          // Train content
        }.tabBar('Train')
        TabContent() {
          // Launch content
        }.tabBar('Launch')
      }.barMode(BarMode.Scrollable)

      Blank()

      Row() {
        this.BottomNavItem($r('app.media.template'), 'Home', true)
        this.BottomNavItem($r('app.media.template'), 'Notification', false, () => {
          router.pushUrl({ url: 'pages/NotificationPage' })
        })
        this.BottomNavItem($r('app.media.template'), 'Ticket', false)
        this.BottomNavItem($r('app.media.template'), 'History', false)
        this.BottomNavItem($r('app.media.template'), 'Profile', false, () => {
          router.pushUrl({ url: 'pages/ProfilePage' })
        })
      }.width('100%').height(60).backgroundColor(Color.White).justifyContent(FlexAlign.SpaceAround)
    }.width('100%').height('100%').backgroundColor('#f5f5f5')
  }

  @Builder
  BookingContent() {
    Column() {
      Row() {
        Radio({ value: 'One Way', group: 'tripType' })
          .checked(this.tripType === 'One Way')
          .onChange((isChecked) => {
            if (isChecked) {
              this.tripType = 'One Way'
            }
          })
        Text('One Way').fontSize(14).margin({ right: 10 })

        Radio({ value: 'Round Way', group: 'tripType' })
          .checked(this.tripType === 'Round Way')
          .onChange((isChecked) => {
            if (isChecked) {
              this.tripType = 'Round Way'
            }
          })
        Text('Round Way').fontSize(14).margin({ right: 10 })

        Radio({ value: 'Multi City', group: 'tripType' })
          .checked(this.tripType === 'Multi City')
          .onChange((isChecked) => {
            if (isChecked) {
              this.tripType = 'Multi City'
            }
          })
        Text('Multi City').fontSize(14)
      }.width('100%').margin({ top: 10, bottom: 20 })

      Row() {
        Column() {
          Text('From').fontSize(14).fontColor(Color.Gray)
          Text(this.travelInfo.from).fontSize(16).fontWeight(FontWeight.Bold)
          Text('CDG, Paris Airport').fontSize(12).fontColor(Color.Gray)
        }.alignItems(HorizontalAlign.Start).layoutWeight(1)

        Image($r('app.media.template')).width(24).height(24)

        Column() {
          Text('To').fontSize(14).fontColor(Color.Gray)
          Text(this.travelInfo.to).fontSize(16).fontWeight(FontWeight.Bold)
          Text('ZRH, Zurich Airport').fontSize(12).fontColor(Color.Gray)
        }.alignItems(HorizontalAlign.End).layoutWeight(1)
      }.width('100%').justifyContent(FlexAlign.SpaceBetween).margin({ bottom: 20 })

      Row() {
        Column() {
          Text('Journey Date').fontSize(14).fontColor(Color.Gray)
          Text(this.travelInfo.journeyDate).fontSize(16).fontWeight(FontWeight.Bold)
          Text('Friday').fontSize(12).fontColor(Color.Gray)
        }.alignItems(HorizontalAlign.Start).layoutWeight(1)

        Column() {
          Text('Return Date').fontSize(14).fontColor(Color.Gray)
          Text('Save more on return flight').fontSize(12).fontColor(Color.Gray)
        }.alignItems(HorizontalAlign.End).layoutWeight(1)
      }.width('100%').justifyContent(FlexAlign.SpaceBetween).margin({ bottom: 20 })

      Row() {
        Text('Traveler & Class').fontSize(14).fontColor(Color.Gray)
        Blank()
        Text(`${this.travelInfo.travelers} Traveler`).fontSize(16).fontWeight(FontWeight.Bold)
        Text(this.travelInfo.travelClass).fontSize(16).fontWeight(FontWeight.Bold).margin({ left: 5 })
      }.width('100%').margin({ bottom: 20 })

      Button('Search', { type: ButtonType.Capsule, stateEffect: true })
        .width('100%')
        .height(50)
        .backgroundColor('#007DFF')
        .fontColor(Color.White)
        .onClick(() => {
          router.pushUrl({ url: 'pages/SearchResultPage' })
        })

      Image($r('app.media.template')).width(24).height(24).margin({ top: 10 })
    }.padding(16)
  }

  @Builder
  BottomNavItem(icon: Resource, label: string, isActive: boolean, onClick?: () => void) {
    Column() {
      Image(icon).width(24).height(24).fillColor(isActive ? '#007DFF' : Color.Gray)
      Text(label).fontSize(12).fontColor(isActive ? '#007DFF' : Color.Gray).margin({ top: 4 })
    }.onClick(onClick)
  }
}