import router from '@ohos.router';

interface Content {
  type: string;
  title: string;
  subtitle?: string;
  cta_button?: string;
  duration?: string;
}

interface FeedItem {
  author: string;
  content: Content;
}

@Entry
@Component
struct HomePage {
  @State currentTime: string = '9:41';
  @State greeting: string = 'Hi, Steven!';
  @State subtitle: string = 'Learn new sentences right away';
  @State tabs: string[] = ['NEW FEED', 'SUBSCRIPTION'];
  @State selectedTab: number = 0;
  @State notificationCount: number = 3;
  @State feedItems: FeedItem[] = [
    {
      author: 'Charlie Herrera',
      content: {
        type: 'lesson',
        title: 'ENGLISH TOURISM',
        subtitle: 'Through the airport security door',
        cta_button: 'LEARN FREE NOW'
      }
    },
    {
      author: 'Ellen Jacobs',
      content: {
        type: 'video',
        title: 'When get hurt',
        duration: '0:17'
      }
    }
  ];

  build() {
    Column() {
      Row() {
        Text(this.currentTime)
          .fontSize(16)
          .fontWeight(FontWeight.Medium)
        Row() {
          Image($r('app.media.template')).width(20).height(20)
          Image($r('app.media.template')).width(20).height(20)
          Image($r('app.media.template')).width(20).height(20)
        }.layoutWeight(1).justifyContent(FlexAlign.End)
      }.width('100%').padding({ left: 20, right: 20, top: 10 })

      Text(this.greeting)
        .fontSize(28)
        .fontWeight(FontWeight.Bold)
        .margin({ top: 20, bottom: 5 })
      Text(this.subtitle)
        .fontSize(16)
        .fontColor(Color.Gray)

      Row() {
        ForEach(this.tabs, (tab: string, index: number) => {
          Text(tab)
            .fontSize(16)
            .fontWeight(this.selectedTab === index ? FontWeight.Bold : FontWeight.Normal)
            .padding(10)
            .backgroundColor(this.selectedTab === index ? Color.Blue : Color.Transparent)
            .borderRadius(20)
            .onClick(() => {
              this.selectedTab = index;
            })
        })
        Badge({
          count: this.notificationCount,
          maxCount: 99,
          style: { color: Color.Red, fontSize: 16 }
        }) {
          Image($r('app.media.template')).width(24).height(24)
        }.margin({ left: 10 })
      }.width('100%').justifyContent(FlexAlign.SpaceBetween).margin({ top: 20, bottom: 20 })

      Scroll() {
        Column() {
          ForEach(this.feedItems, (item: FeedItem) => {
            this.FeedItemComponent(item)
          })
        }.width('100%')
      }.height('70%')

      Row() {
        Column() {
          Image($r('app.media.template')).width(24).height(24)
          Text('Home').fontSize(12)
        }.onClick(() => {}).layoutWeight(1)
        Column() {
          Image($r('app.media.template')).width(24).height(24)
          Text('Search').fontSize(12)
        }.onClick(() => {
          router.pushUrl({ url: 'pages/SearchPage' })
        }).layoutWeight(1)
        Column() {
          Image($r('app.media.template')).width(24).height(24)
          Text('Speak').fontSize(12)
        }.onClick(() => {
          router.pushUrl({ url: 'pages/SpeakPage' })
        }).layoutWeight(1)
        Column() {
          Image($r('app.media.template')).width(24).height(24)
          Text('Word').fontSize(12)
        }.onClick(() => {}).layoutWeight(1)
        Column() {
          Image($r('app.media.template')).width(24).height(24)
          Text('Profile').fontSize(12)
        }.onClick(() => {}).layoutWeight(1)
      }.width('100%').height('10%').backgroundColor(Color.White)
    }.height('100%').backgroundColor('#F8F8F8')
  }

  @Builder
  FeedItemComponent(item: FeedItem) {
    Column() {
      Row() {
        Image($r('app.media.template')).width(40).height(40).borderRadius(20)
        Text(item.author).fontSize(16).fontWeight(FontWeight.Medium).margin({ left: 10 })
      }.width('100%').margin({ bottom: 10 })

      if (item.content.type === 'lesson') {
        Column() {
          Text(item.content.title).fontSize(24).fontWeight(FontWeight.Bold)
          Text(item.content.subtitle).fontSize(16).fontColor(Color.Gray).margin({ top: 5 })
          Button(item.content.cta_button)
            .width('80%')
            .height(40)
            .backgroundColor(Color.Blue)
            .margin({ top: 20 })
            .onClick(() => {
              router.pushUrl({ url: 'pages/LessonDetailPage' })
            })
        }.width('100%').height(200).borderRadius(20).backgroundColor(Color.Blue).padding(20)
      } else if (item.content.type === 'video') {
        Stack() {
          Image($r('app.media.template')).width('100%').height(200).borderRadius(20)
          Text(item.content.duration)
            .fontSize(14)
            .backgroundColor(Color.Black)
            .fontColor(Color.White)
            .padding(5)
            .position({ x: '85%', y: '85%' })
        }.width('100%').height(200)
        Text(item.content.title).fontSize(18).fontWeight(FontWeight.Medium).margin({ top: 10 })
      }
    }.width('100%').padding(20).backgroundColor(Color.White).borderRadius(20).margin({ bottom: 20 })
  }
}