import router from '@ohos.router';

interface CourseInfo {
  title: string;
  type: string;
  rating: number;
  price: string;
  image: Resource;
}

@Entry
@Component
struct DiscoverPage {
  @State courseOfTheWeeks: CourseInfo[] = [
    {
      title: 'How to make modern poster for Beginner',
      type: 'GRAPHICS DESIGN',
      rating: 4.9,
      price: '$12.00',
      image: $r('app.media.template')
    },
    {
      title: 'How to make Design system in easy waen',
      type: 'UI/UX DESIGN',
      rating: 4.9,
      price: '$12.00',
      image: $r('app.media.template')
    }
  ];

  @State suitsToYou: CourseInfo[] = [
    {
      title: 'How to make modern poster',
      type: 'GRAPHICS DESIGN',
      rating: 4.9,
      price: '',
      image: $r('app.media.template')
    },
    {
      title: 'How to make Design system',
      type: 'UI/UX DESIGN',
      rating: 4.9,
      price: '',
      image: $r('app.media.template')
    }
  ];

  build() {
    Column() {
      Row() {
        Text('Discover the best course that suits to you')
          .fontSize(24)
          .fontWeight(FontWeight.Bold)
          .layoutWeight(1)
        Badge({ count: 1, position: BadgePosition.Right, style: { color: Color.Red } }) {
          Image($r('app.media.template'))
            .width(24)
            .height(24)
        }
      }.width('100%').padding({ top: 60, bottom: 20, left: 16, right: 16 })

      Row() {
        TextInput({ placeholder: 'Search course...' })
          .width('85%')
          .height(40)
          .backgroundColor('#F1F1F1')
          .borderRadius(20)
          .padding({ left: 16 })
          .onChange((value: string) => {
            if (value) {
              router.pushUrl({ url: 'pages/SearchPage' })
            }
          })
        Image($r('app.media.template'))
          .width(40)
          .height(40)
          .margin({ left: 8 })
      }.width('100%').padding({ left: 16, right: 16, bottom: 20 })

      Scroll() {
        Column() {
          this.SectionHeader('Course of the weeks')
          this.CourseList(this.courseOfTheWeeks)

          this.SectionHeader('Suits to you')
          this.CourseList(this.suitsToYou)
        }
      }.height('85%')

      Row() {
        Image($r('app.media.template')).width(24).height(24)
        Image($r('app.media.template')).width(24).height(24)
        Image($r('app.media.template')).width(24).height(24)
        Image($r('app.media.template')).width(24).height(24)
      }
      .width('100%')
      .justifyContent(FlexAlign.SpaceAround)
      .backgroundColor(Color.White)
      .position({ y: '96%' })
    }
    .width('100%')
    .height('100%')
    .backgroundColor('#F8F8F8')
  }

  @Builder
  SectionHeader(title: string) {
    Row() {
      Text(title)
        .fontSize(18)
        .fontWeight(FontWeight.Medium)
      Blank()
      Text('See all')
        .fontSize(14)
        .fontColor(Color.Blue)
    }
    .width('100%')
    .padding({ left: 16, right: 16, top: 16, bottom: 8 })
  }

  @Builder
  CourseList(courses: CourseInfo[]) {
    Row() {
      ForEach(courses, (course: CourseInfo) => {
        this.CourseCard(course)
      })
    }
    .width('100%')
    .height(220)
    .scrollable(ScrollDirection.Horizontal)
    .padding({ left: 16, right: 16 })
  }

  @Builder
  CourseCard(course: CourseInfo) {
    Column() {
      Image(course.image)
        .width(160)
        .height(100)
        .borderRadius(8)
      Text(course.type)
        .fontSize(12)
        .fontColor(Color.Gray)
        .margin({ top: 8 })
      Text(course.title)
        .fontSize(16)
        .fontWeight(FontWeight.Medium)
        .margin({ top: 4 })
      Row() {
        Image($r('app.media.template')).width(16).height(16)
        Text(course.rating.toString()).fontSize(14).margin({ left: 4 })
        if (course.price) {
          Text(course.price)
            .fontSize(14)
            .fontWeight(FontWeight.Bold)
            .margin({ left: 8 })
        }
      }.margin({ top: 4 })
    }
    .width(160)
    .height(200)
    .margin({ right: 16 })
    .onClick(() => {
      router.pushUrl({ url: 'pages/CourseDetailPage' })
    })
  }
}