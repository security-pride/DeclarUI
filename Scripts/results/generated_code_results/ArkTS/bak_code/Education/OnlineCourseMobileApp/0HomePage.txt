import router from '@ohos.router';

@Entry
@Component
struct HomePage {
  @State userName: string = 'Nicolas Doflamingo';
  @State notificationCount: number = 1;
  @State courses: Array<{title: string, type: string, instructor: string, progress: number, sessions: string}> = [
    {
      title: 'How to make modern poster for Beginner',
      type: 'GRAPHICS DESIGN',
      instructor: 'Nicola Tesla',
      progress: 82,
      sessions: '7 / 15'
    },
    {
      title: 'How to make D system in easy',
      type: 'UI/UX DESIGN',
      instructor: 'Dwi Gunawan',
      progress: 82,
      sessions: '7 / 15'
    }
  ];
  @State mentors: Array<{name: string, rating: number, reviewsCount: number}> = [
    { name: 'Nicola Tesla', rating: 4.9, reviewsCount: 1435 },
    { name: 'Galileo Galilei', rating: 4.9, reviewsCount: 1435 }
  ];

  build() {
    Column() {
      // Header
      Row() {
        Column() {
          Text('Welcome Back')
            .fontSize(14)
            .fontColor(Color.Gray)
          Text(this.userName)
            .fontSize(18)
            .fontWeight(FontWeight.Bold)
        }
        .alignItems(HorizontalAlign.Start)

        Blank()

        Badge({
          count: this.notificationCount,
          position: BadgePosition.Right,
          style: { color: Color.Red, fontSize: 10, badgeSize: 16 }
        }) {
          Image($r('app.media.template'))
            .width(24)
            .height(24)
        }
        .onClick(() => {
          // Handle notification click
        })
      }
      .width('100%')
      .padding({ top: 20, bottom: 10, left: 16, right: 16 })

      // Best courses section
      Row() {
        Text('Best courses that suits to you')
          .fontSize(16)
          .fontWeight(FontWeight.Medium)
        Blank()
        Text('See all')
          .fontSize(14)
          .fontColor(Color.Blue)
          .onClick(() => {
            router.pushUrl({ url: 'pages/DiscoverPage' })
          })
      }
      .width('100%')
      .padding({ left: 16, right: 16, top: 10, bottom: 10 })

      // My Courses section
      Column() {
        Row() {
          Text('My Courses')
            .fontSize(16)
            .fontWeight(FontWeight.Medium)
          Blank()
          Text('See all')
            .fontSize(14)
            .fontColor(Color.Blue)
            .onClick(() => {
              router.pushUrl({ url: 'pages/MyCoursesPage' })
            })
        }
        .width('100%')
        .padding({ bottom: 10 })

        ForEach(this.courses, (course) => {
          this.CourseCard(course)
        })
      }
      .width('100%')
      .padding({ left: 16, right: 16, top: 10, bottom: 10 })

      // Mentor of The Weeks section
      Column() {
        Row() {
          Text('Mentor of The Weeks')
            .fontSize(16)
            .fontWeight(FontWeight.Medium)
          Blank()
          Text('See all')
            .fontSize(14)
            .fontColor(Color.Blue)
        }
        .width('100%')
        .padding({ bottom: 10 })

        Row() {
          ForEach(this.mentors, (mentor) => {
            this.MentorCard(mentor)
          })
        }
        .width('100%')
        .justifyContent(FlexAlign.SpaceBetween)
      }
      .width('100%')
      .padding({ left: 16, right: 16, top: 10, bottom: 10 })
    }
    .width('100%')
    .height('100%')
    .backgroundColor('#F5F5F5')

    // Bottom Navigation
    Row() {
      this.NavItem('Home', true)
      this.NavItem('Discover', false)
      this.NavItem('My Courses', false)
      this.NavItem('Profile', false)
    }
    .width('100%')
    .height(60)
    .backgroundColor(Color.White)
    .position({ x: 0, y: '94%' })
  }

  @Builder
  CourseCard(course: {title: string, type: string, instructor: string, progress: number, sessions: string}) {
    Row() {
      Column() {
        Text(course.type)
          .fontSize(12)
          .fontColor(Color.Blue)
        Text(course.title)
          .fontSize(16)
          .fontWeight(FontWeight.Medium)
          .margin({ top: 5, bottom: 5 })
        Text(course.instructor)
          .fontSize(14)
          .fontColor(Color.Gray)
        Row() {
          Text(course.sessions)
            .fontSize(12)
            .fontColor(Color.Gray)
          Progress({ value: course.progress, total: 100 })
            .width('60%')
            .height(6)
            .margin({ left: 10 })
        }
        .margin({ top: 5 })
      }
      .alignItems(HorizontalAlign.Start)
      .layoutWeight(1)

      Image($r('app.media.template'))
        .width(80)
        .height(80)
        .margin({ left: 10 })
    }
    .width('100%')
    .padding(10)
    .backgroundColor(Color.White)
    .borderRadius(10)
    .margin({ bottom: 10 })
    .onClick(() => {
      router.pushUrl({ url: 'pages/CourseDetailPage' })
    })
  }

  @Builder
  MentorCard(mentor: {name: string, rating: number, reviewsCount: number}) {
    Column() {
      Image($r('app.media.template'))
        .width(60)
        .height(60)
        .borderRadius(30)
      Text(mentor.name)
        .fontSize(14)
        .fontWeight(FontWeight.Medium)
        .margin({ top: 5, bottom: 5 })
      Row() {
        Image($r('app.media.template'))
          .width(16)
          .height(16)
        Text(`${mentor.rating} (${mentor.reviewsCount} Reviews)`)
          .fontSize(12)
          .fontColor(Color.Gray)
          .margin({ left: 5 })
      }
    }
    .alignItems(HorizontalAlign.Center)
    .padding(10)
    .backgroundColor(Color.White)
    .borderRadius(10)
  }

  @Builder
  NavItem(title: string, isActive: boolean) {
    Column() {
      Image($r('app.media.template'))
        .width(24)
        .height(24)
      Text(title)
        .fontSize(12)
        .fontColor(isActive ? Color.Blue : Color.Gray)
    }
    .alignItems(HorizontalAlign.Center)
    .layoutWeight(1)
    .onClick(() => {
      if (title === 'Discover') {
        router.pushUrl({ url: 'pages/DiscoverPage' })
      } else if (title === 'My Courses') {
        router.pushUrl({ url: 'pages/MyCoursesPage' })
      }
    })
  }
}