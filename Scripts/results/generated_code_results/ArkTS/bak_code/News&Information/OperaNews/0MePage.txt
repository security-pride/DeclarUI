import router from '@ohos.router';

interface SettingsItem {
  icon: Resource;
  title: string;
  description?: string;
  value?: string;
}

@Entry
@Component
struct MePage {
  @State settingsItems: SettingsItem[] = [
    { icon: $r('app.media.template'), title: 'Offline reading', description: 'Read news without the internet' },
    { icon: $r('app.media.template'), title: 'Read it later' },
    { icon: $r('app.media.template'), title: 'Blocked users' },
    { icon: $r('app.media.template'), title: 'Country & language' },
    { icon: $r('app.media.template'), title: 'Dark mode', value: 'Automatic' }
  ]

  build() {
    Column() {
      Row() {
        Image($r('app.media.template'))
          .width(40)
          .height(40)
          .margin({ right: 16 })
        Text('Opera News')
          .fontSize(20)
          .fontWeight(FontWeight.Bold)
        Blank()
        Image($r('app.media.template'))
          .width(24)
          .height(24)
          .onClick(() => {
            router.pushUrl({ url: 'pages/SettingsPage' })
          })
      }
      .width('100%')
      .height(56)
      .padding({ left: 16, right: 16 })

      Scroll() {
        Column() {
          ForEach(this.settingsItems, (item: SettingsItem) => {
            Row() {
              Image(item.icon)
                .width(24)
                .height(24)
                .margin({ right: 16 })
              Column() {
                Text(item.title)
                  .fontSize(16)
                if (item.description) {
                  Text(item.description)
                    .fontSize(14)
                    .fontColor(Color.Gray)
                }
              }
              .alignItems(HorizontalAlign.Start)
              Blank()
              if (item.value) {
                Text(item.value)
                  .fontSize(14)
                  .fontColor(Color.Gray)
              }
              Image($r('app.media.template'))
                .width(16)
                .height(16)
            }
            .width('100%')
            .height(56)
            .padding({ left: 16, right: 16 })
            .onClick(() => {
              if (item.title === 'Offline reading') {
                router.pushUrl({ url: 'pages/OfflineReadingPage' })
              }
            })
          })
        }
      }
      .layoutWeight(1)

      Row() {
        Column() {
          Image($r('app.media.template'))
            .width(24)
            .height(24)
          Text('Home')
            .fontSize(12)
        }
        .onClick(() => {
          router.pushUrl({ url: 'pages/HomePage' })
        })

        Column() {
          Image($r('app.media.template'))
            .width(24)
            .height(24)
          Text('Me')
            .fontSize(12)
            .fontColor(Color.Red)
        }
      }
      .width('100%')
      .height('8%')
      .justifyContent(FlexAlign.SpaceAround)
      .backgroundColor('#F1F3F5')
    }
    .width('100%')
    .height('100%')
  }
}