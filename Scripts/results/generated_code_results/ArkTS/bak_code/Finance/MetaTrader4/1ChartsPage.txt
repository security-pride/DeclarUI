import router from '@ohos.router';

interface PriceData {
  value: string;
}

interface ChartData {
  timeframe: string;
  currencyPair: string;
}

interface TabData {
  icon: string;
  label: string;
}

interface RSIData {
  value: string;
}

@Entry
@Component
struct ChartsPage {
  @State prices: PriceData[] = [
    { value: '1.09090' },
    { value: '1.09250' },
    { value: '1.08850' },
    { value: '1.09010' },
    { value: '1.09339' },
    { value: '1.09410' },
    { value: '1.09490' },
    { value: '1.09170' }
  ];
  @State chartInfo: ChartData = { timeframe: 'H1', currencyPair: 'EURUSD' };
  @State tabs: TabData[] = [
    { icon: 'app.media.template', label: 'Quotes' },
    { icon: 'app.media.template', label: 'Chart' },
    { icon: 'app.media.template', label: 'Trade' },
    { icon: 'app.media.template', label: 'History' },
    { icon: 'app.media.template', label: 'Settings' }
  ];
  @State rsiData: RSIData = { value: '61.16' };
  @State dates: string[] = ['15 Jul 11:00', '16 Jul 19:00', '17 Jul 11:00'];

  build() {
    Column() {
      Row() {
        Text(this.chartInfo.timeframe)
          .fontSize(16)
        Text(`${this.chartInfo.currencyPair}, ${this.chartInfo.timeframe}`)
          .fontSize(16)
        Blank()
        Text('Trade')
          .fontSize(16)
      }
      .width('100%')
      .padding(10)

      Stack({ alignContent: Alignment.Center }) {
        Column() {
          ForEach(this.prices, (price: PriceData) => {
            Text(price.value)
              .fontSize(14)
              .margin({ top: 5, bottom: 5 })
          })
        }
        .width('100%')
        .height('80%')

        Column() {
          ForEach(this.dates, (date: string) => {
            Text(date)
              .fontSize(12)
              .margin({ top: 5, bottom: 5 })
          })
        }
        .width('100%')
        .height('80%')
        .alignItems(HorizontalAlign.Start)
        .justifyContent(FlexAlign.End)

        Text('RSI(14) ' + this.rsiData.value)
          .fontSize(14)
          .position({ x: 10, y: '90%' })

        Text('100.00')
          .fontSize(14)
          .position({ x: '90%', y: 10 })

        Text('70.00')
          .fontSize(14)
          .position({ x: '90%', y: '45%' })

        Text('30.00')
          .fontSize(14)
          .position({ x: '90%', y: '80%' })
      }
      .width('100%')
      .height('80%')

      Row() {
        ForEach(this.tabs, (tab: TabData) => {
          Column() {
            Image($r('app.media.template'))
              .width(24)
              .height(24)
            Text(tab.label)
              .fontSize(12)
          }
          .onClick(() => {
            if (tab.label === 'Settings') {
              router.pushUrl({ url: 'pages/SettingsPage' })
            }
          })
        })
      }
      .width('100%')
      .justifyContent(FlexAlign.SpaceAround)
      .height('10%')
    }
    .width('100%')
    .height('100%')
  }

  @Builder
  IconButton(icon: string, action: () => void) {
    Button({ type: ButtonType.Circle, stateEffect: true }) {
      Image($r('app.media.template'))
        .width(24)
        .height(24)
    }
    .width(40)
    .height(40)
    .onClick(action)
  }

  openObjectsMenu() {
    router.pushUrl({ url: 'pages/ObjectsPage' })
  }
}