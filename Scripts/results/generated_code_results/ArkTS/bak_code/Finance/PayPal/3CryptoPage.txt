import router from '@ohos.router';

interface CryptoItem {
  name: string;
  symbol: string;
  price: string;
  icon: Resource;
}

@Entry
@Component
struct CryptoPage {
  @State cryptoList: CryptoItem[] = [
    { name: 'Bitcoin', symbol: 'BTC', price: '£ 49,339.33/BTC', icon: $r('app.media.template') },
    { name: 'Ethereum', symbol: 'ETH', price: '£ 2,611.73/ETH', icon: $r('app.media.template') },
    { name: 'Litecoin', symbol: 'LTC', price: '£ 55.24/LTC', icon: $r('app.media.template') },
    { name: 'Bitcoin Cash', symbol: 'BCH', price: '£ 287.75/BCH', icon: $r('app.media.template') }
  ];

  build() {
    Column() {
      Text('Crypto')
        .fontSize(24)
        .fontWeight(FontWeight.Bold)
        .padding({ top: 16, bottom: 16 })

      Banner()
        .backgroundColor('#F0F0F0')
        .padding(16)
        .margin({ bottom: 16 })

      Text('买卖并持有加密货币')
        .fontSize(18)
        .fontWeight(FontWeight.Medium)
        .padding({ left: 16, right: 16, bottom: 8 })

      List() {
        ForEach(this.cryptoList, (item: CryptoItem) => {
          ListItem() {
            CryptoListItem({ item: item })
          }
          .onClick(() => {
            if (item.name === 'Bitcoin') {
              router.pushUrl({ url: 'pages/BitcoinPage' })
            }
          })
        })
      }
      .height('70%')

      Text('这些条款仅提供一般信息，不构成财务、投资或税务方面的建议。')
        .fontSize(12)
        .fontColor(Color.Gray)
        .textAlign(TextAlign.Center)
        .padding(16)

      Row() {
        Column() {
          Image($r('app.media.template')).width(24).height(24)
          Text('Home').fontSize(12)
        }.layoutWeight(1).onClick(() => router.pushUrl({ url: 'pages/HomePage' }))

        Column() {
          Image($r('app.media.template')).width(24).height(24)
          Text('Crypto').fontSize(12).fontColor(Color.Blue)
        }.layoutWeight(1)

        Column() {
          Image($r('app.media.template')).width(24).height(24)
          Text('Payments').fontSize(12)
        }.layoutWeight(1)

        Column() {
          Image($r('app.media.template')).width(24).height(24)
          Text('Wallet').fontSize(12)
        }.layoutWeight(1)
      }
      .width('100%')
      .height(56)
      .position({ y: '100%' })
      .translate({ y: -56 })
      .backgroundColor(Color.White)
    }
    .width('100%')
    .height('100%')
  }
}

@Component
struct Banner {
  build() {
    Row() {
      Image($r('app.media.template')).width(24).height(24).margin({ right: 8 })
      Text("PayPal's crypto purchasing service is temporarily paused while we update our system to comply with new UK regulations. You can continue to hold your crypto, or you may sell if you choose.")
        .fontSize(14)
        .layoutWeight(1)
    }
  }
}

@Component
struct CryptoListItem {
  item: CryptoItem = { name: '', symbol: '', price: '', icon: $r('app.media.template') }

  build() {
    Row() {
      Image(this.item.icon)
        .width(40)
        .height(40)
        .margin({ right: 16 })
      Column() {
        Text(this.item.name)
          .fontSize(16)
          .fontWeight(FontWeight.Medium)
        Text(this.item.price)
          .fontSize(14)
          .fontColor(Color.Gray)
      }
      .alignItems(HorizontalAlign.Start)
      .layoutWeight(1)
    }
    .width('100%')
    .padding(16)
    .backgroundColor(Color.White)
  }
}